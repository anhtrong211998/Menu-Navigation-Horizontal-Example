<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:converters="clr-namespace:Navigation_Menu_App.Converters">
    <converters:IconConverter x:Key="IconConverter">
        
    </converters:IconConverter>

    <converters:SubItemShowConverter x:Key="SubItemShowConverter">

    </converters:SubItemShowConverter>

    <converters:IsNullConverter x:Key="IsNullConverter"></converters:IsNullConverter>
    <!--Menu with SubMenu Template-->
    <ControlTemplate x:Key="Menu_SubMenu_Template"
                     TargetType="{x:Type MenuItem}">
        <Border x:Name="border"
                Background="#2E333A"
                BorderBrush="#2E333A"
                BorderThickness="0">
            <Grid>

                <!--<Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>-->
                

                <!--<ListBoxItem Content="{TemplateBinding Header}"
                                  Grid.Column="2"
                                  Foreground="White"
                                  FontFamily="Fonts/#Roboto Light"
                                  FontSize="20"
                                  HorizontalAlignment="Left"
                                  Margin="3,0,0,0"
                                  VerticalAlignment="Top">
                    <ListBoxItem.Style>
                        <Style TargetType="ListBoxItem">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SubMenuItem, Converter={StaticResource IsNullConverter}}" 
                                         Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding SubMenuItem, Converter={StaticResource IsNullConverter}}" 
                                         Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListBoxItem.Style>
                </ListBoxItem>-->
                <Expander x:Name="PART_Popup"
                          Focusable="False"
                          IsExpanded="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                          Background="Transparent"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Top"
                          >
                    <Expander.Header>
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon x:Name="Icon"
                                         Kind="{TemplateBinding Tag,Converter={StaticResource IconConverter}}"
                                         HorizontalAlignment="Stretch"
                                         Height="35"
                                         Width="35"
                                         Margin="10,0,0,0"
                                         VerticalAlignment="Center"
                                         Foreground="{TemplateBinding Foreground}"/>
                            <TextBlock Text="{TemplateBinding Header}"
                                  Foreground="White"
                                  FontFamily="Fonts/#Roboto Light"
                                  FontSize="20"
                                  Margin="10,0,0,0"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center" />
                        </StackPanel>
                        
                </Expander.Header>
                <!--<Expander.Style>
                    <Style TargetType="Expander">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SubMenuItem, Converter={StaticResource IsNullConverter}}" 
                                         Value="True">
                                <Setter Property="IsExpanded" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding SubMenuItem, Converter={StaticResource IsNullConverter}}" 
                                         Value="False">
                                    <Setter Property="IsExpanded" Value="True" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Expander.Style>-->
                    <Border x:Name="SubMenuBorder"
                                Background="#2E333A"
                                BorderBrush="#2E333A"
                            Margin="0,0,0,0">
                        <ScrollViewer x:Name="SubMenuScrollViewer"
                                          Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas HorizontalAlignment="Left"
                                            VerticalAlignment="Top" 
                                    />
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    Grid.IsSharedSizeScope="True"
                                                    KeyboardNavigation.TabNavigation="Cycle" 
                                    />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Expander>

            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <!--<Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None" />
            </Trigger>-->

            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Visible" />
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="Icon" Value="Visible" />
            </Trigger>

            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="border" Value="#404D5B" />
                <Setter Property="BorderBrush" TargetName="border" Value="#404D5B" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Main Menu Template-->
    <ControlTemplate x:Key="Menu_Template"
                     TargetType="{x:Type MenuItem}">
        <Border x:Name="border"
                Background="#2E333A"
                BorderBrush="#2E333A"
                BorderThickness="0"
                Margin="27,10,0,0">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!--Icon--><!--
                <ContentPresenter x:Name="Icon" 
                                  ContentSource="Icon"
                                  HorizontalAlignment="Left"
                                  Height="35"
                                  Width="35"
                                  Margin="10,0,0,0"
                                  VerticalAlignment="Center" />-->
                <materialDesign:PackIcon x:Name="Icon" 
                                         Kind="{TemplateBinding Tag,Converter={StaticResource IconConverter}}"
                                         HorizontalAlignment="Left"
                                         Height="35"
                                         Width="35"
                                         Margin="10,0,0,0"
                                         VerticalAlignment="Center"
                                         Foreground="{TemplateBinding Foreground}"/>

                <!--Menu text-->
                <TextBlock Text="{TemplateBinding Header}"
                                  Grid.Column="2"
                                  Foreground="White"
                                  FontFamily="Fonts/#Roboto Light"
                                  FontSize="20"
                                  HorizontalAlignment="Left"
                                  Margin="10,0,0,0"
                                  VerticalAlignment="Center"
                />
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Visible" />
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="Icon" Value="Visible" />
            </Trigger>

            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="border" Value="#404D5B" />
                <Setter Property="BorderBrush" TargetName="border" Value="#404D5B" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Maximize/Minimize App Button Style-->
    <Style x:Key="MaxmizeBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="35" />
        <Setter Property="Width" Value="35" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="0 20 60 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderThickness="0" 
                            Background="#23262B" 
                            Cursor="Hand">
                        <materialDesign:PackIcon Kind="WindowMaximize" 
                                                 HorizontalAlignment="Stretch"
                                                 Height="30"
                                                 Width="30"
                                                 VerticalAlignment="Center"
                                                 Foreground="White"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#404D5B" />
                            <Setter Property="BorderBrush" TargetName="border" Value="#404D5B" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#404D5B" />
                            <Setter Property="BorderBrush" TargetName="border" Value="#404D5B" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#404D5B" />
                            <Setter Property="BorderBrush" TargetName="border" Value="#404D5B" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#23262B" />
                            <Setter Property="BorderBrush" TargetName="border" Value="#404D5B" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Maximize/Minimize App Button Style-->
    <Style x:Key="MinimizeBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="35" />
        <Setter Property="Width" Value="35" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="0 20 102 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderThickness="0" 
                            Background="#23262B" 
                            Cursor="Hand">
                        <materialDesign:PackIcon Kind="WindowMinimize" 
                                                 HorizontalAlignment="Stretch"
                                                 Height="30"
                                                 Width="30"
                                                 VerticalAlignment="Center"
                                                 Foreground="White"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#404D5B" />
                            <Setter Property="BorderBrush" TargetName="border" Value="#404D5B" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#404D5B" />
                            <Setter Property="BorderBrush" TargetName="border" Value="#404D5B" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Close App Button Style-->
    <Style x:Key="CloseBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="35" />
        <Setter Property="Width" Value="35" />
        <Setter Property="Width" Value="35" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="0 20 18 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderThickness="0" 
                            Background="#23262B" 
                            Cursor="Hand">
                        <materialDesign:PackIcon Kind="PowerSettingsNew" 
                                                 HorizontalAlignment="Stretch"
                                                 Height="30"
                                                 Width="30"
                                                 VerticalAlignment="Center"
                                                 Foreground="White"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#404D5B" />
                            <Setter Property="BorderBrush" TargetName="border" Value="#404D5B" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#404D5B" />
                            <Setter Property="BorderBrush" TargetName="border" Value="#404D5B" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<DataTemplate x:Key="Sub_Menu_Tempalte">
        <MenuItem  Header="{Binding Header}"
                   Template="{StaticResource Item_Template}"
                   Tag="{Binding Icon}"
                   Foreground="{Binding Foreground}"
                   Visibility="{Binding SubMenuItem, Converter={StaticResource SubItemShowConverter}}"
            />
    </DataTemplate>-->

    <!--<DataTemplate x:Key="Main_Menu_Tempalte">
        <MenuItem  Header="{Binding Header}"
                   Template="{StaticResource Menu_SubMenu_Template}"
                   Tag="{Binding Icon}"
                   Foreground="{Binding Foreground}">
        </MenuItem>
    </DataTemplate>-->
</ResourceDictionary>